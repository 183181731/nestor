{
  "options": [
    { "arg": "--url <url>", "desc": "Jenkins URL" },
    { "arg": "--interactive", "desc": "Interactive mode, username and password will be prompted" }
  ],
  "commands": {
    "build": {
      "desc": "Trigger a build with optional parameters",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] },
        { "name": "params", "optional": true }
      ],
      "options": [
        { "arg": "-c, --console", "desc": "Display console output of the triggered build progress" },
        { "arg": "-p, --pending <pending>", "desc": "Pending time (in milliseconds) before displaying console output, default: 5000" }
      ],
      "examples": [
        "nestor build <job> <\"param1=value1&param2=value2\">",
        "nestor build --console <job>",
        "nestor build --pending <5000> --console <job>",
        "JENKINS_URL=http://host:8080 nestor build --interactive <job>",
        "JENKINS_URL=http://host:8080 nestor build <job>",
        "nestor build --url <http://host:8080> <job>"
      ]
    },
    "build-all": {
      "desc": "Trigger all builds"
    },
    "build-fail": {
      "desc": "Trigger builds with fail status"
    },
    "console": {
      "desc": "Display latest build console output",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ]
    },
    "stop": {
      "desc": "Stop the currently running build",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ]
    },
    "dashboard": {
      "desc": "View status of all jobs"
    },
    "discover": {
      "desc": "Discover Jenkins instance running on a specified host"
    },
    "executor": {
      "desc": "View executors' status (running builds)"
    },
    "job": {
      "desc": "View job status reports",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ]
    },
    "create-job": {
      "desc": "Create a new job with specified config.xml",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] },
        { "name": "config", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor create-job <job> <path/to/config.xml>"
      ]
    },
    "update-job": {
      "desc": "Update an existing job with specified config.xml",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] },
        { "name": "config", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor update-job <job> <path/to/config.xml>"
      ]
    },
    "delete-job": {
      "desc": "Delete an existing job",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor delete-job <job>"
      ]
    },
    "enable-job": {
      "desc": "Enable a job",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor enable-job <job>"
      ]
    },
    "disable-job": {
      "desc": "Disable a job",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor disable-job <job>"
      ]
    },
    "copy-job": {
      "desc": "Copy an existing job",
      "args": [
        { "name": "job1", "rules": [ "notEmpty" ] },
        { "name": "job2", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor copy-job <job1> <job2>"
      ]
    },
    "fetch-job-config": {
      "desc": "Fetch the config.xml of an existing job",
      "args": [
        { "name": "job", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor fetch-job-config <job>"
      ]
    },
    "create-view": {
      "desc": "Create a new view with specified config.xml",
      "args": [
        { "name": "view", "rules": [ "notEmpty" ] },
        { "name": "config", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor create-view <view> <path/to/config.xml>"
      ]
    },
    "update-view": {
      "desc": "Update an existing view with specified config.xml",
      "args": [
        { "name": "view", "rules": [ "notEmpty" ] },
        { "name": "config", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor update <job> <path/to/config.xml>"
      ]
    },
    "fetch-view-config": {
      "desc": "Fetch the config.xml of an existing view",
      "args": [
        { "name": "view", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor fetch-view-config <view>"
      ]
    },
    "queue": {
      "desc": "View queued jobs"
    },
    "ver": {
      "desc": "View Jenkins version number"
    },
    "irc": {
      "desc": "Start an IRC bot",
      "args": [
        { "name": "host", "rules": [ "notEmpty" ] },
        { "name": "channel", "rules": [ "notEmpty" ] },
        { "name": "nick", "rules": [ "notEmpty" ] }
      ],
      "examples": [
        "nestor irc <host> <channel> <nick>"
      ]
    },
    "feed": {
      "desc": "Retrieve Jenkins feed",
      "options": [
        { "arg": "-j, --job <job>", "desc": "Jenkins job name" },
        { "arg": "-v, --view <view>", "desc": "Jenkins view name" }
      ],
      "examples": [
        "nestor --job <job> feed",
        "nestor --view <view> feed"
      ]
    },
    "ninja": {
      "desc": "Display latest build status on Ninja Blocks RGB LED",
      "options": [
        { "arg": "-j, --job <job>", "desc": "Jenkins job name" },
        { "arg": "-v, --view <view>", "desc": "Jenkins view name" },
        { "arg": "-s, --schedule <schedule>", "desc": "Cron scheduling definition, default: 0 * * * * * (every minute)" }
      ],
      "examples": [
        "export NINJABLOCKS_TOKEN=token nestor ninja"
      ]
    },
    "buildlight": {
      "desc": "Display latest build status on Delcom USB Visual Indicator",
      "options": [
        { "arg": "-j, --job <job>", "desc": "Jenkins job name" },
        { "arg": "-v, --view <view>", "desc": "Jenkins view name" },
        { "arg": "-s, --schedule <schedule>", "desc": "Cron scheduling definition, default: 0 * * * * * (every minute)" },
        { "arg": "-c, --scheme <scheme>", "desc": "Comma-separated colour scheme, default: red,green,blue" },
        { "arg": "-u, --usbled <usbled>", "desc": "Path to usbled installation, if not specified then it will try to find a usbled installation at /sys/bus/usb/drivers/usbled/" },
        { "arg": "-b, --blink-on-failure", "desc": "Blink light on build failure" }
      ]
    }
  }
}